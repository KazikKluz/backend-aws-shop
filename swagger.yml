openapi: 3.0.0
info:
  title: ProductsAPI
  description: Simple API for receiving products
  version: 1.0.0
  contact:
    email: kazik.kluz@gmail.com

servers:
  - url: https://pe3emabxdh.execute-api.eu-west-1.amazonaws.com/prod
    description: URL of the AWS Gateway

tags:
  - name: Products
    description: products resource

paths:
  /products:
    get:
      tags:
        - Products
      summary: get products
      description: returns a list of products 
      operationId: getProductsList
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Products
      summary: add a new product
      description: add a new product to the list
      operationId: createProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProduct'
        required: true
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /products/{id}:
    get:
      tags:
        - Products
      summary: get a single product by ID
      description: Returns a single product by the id
      operationId: getProductsById
      parameters:
        - name: id
          in: path
          description: id of the product to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: invalid id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "7567ec4b-b10c-48c5-9345-fc73c48a8000"
          description: product unique identifier
        title:
          type: string
          example: "Product Name"
          description: name of the product
        price:
          type: number
          format: integer
          example: 11
          description: price of the product
        description:
          type: string
          example: "Product description"
          description: description of the product
        count:
          type: integer
          example: 1
          description: count of the product
      required:
        - id
        - title
        - price
        - description
        - count
    
    CreateProduct:
      type: object
      properties:
        title:
          type: string
          example: "Product Name"
          description: name of the product
        price:
          type: number
          format: integer
          example: 11
          description: price of the product
        description:
          type: string
          example: "Product description"
          description: description of the product
        count:
          type: integer
          example: 1
          description: count of the product
      required:
        - title
        - price
        - description
        - count

    Error:
      type: object
      properties:
        message:
          type: string
          example: "Error message"
          description: Error description



